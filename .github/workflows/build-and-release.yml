name: 构建并发布

on:
  push:
    tags:
      - 'v*'  # 当推送带v前缀的标签时触发，例如v1.0.0

jobs:
  build-macos:
    name: 构建 macOS (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            python-arch: x64
          - os: macos-latest
            arch: arm64
            python-arch: arm64

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.python-arch }}

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 构建应用
        run: |
          pyinstaller --name XingTu-core-${{ matrix.arch }} \
                      --onefile \
                      --add-data "XingTu_core:XingTu_core" \
                      --hidden-import=PIL._tkinter_finder \
                      XingTu_core/__main__.py

      - name: 压缩构建结果
        run: |
          cd dist
          zip -r XingTu-core-macos-${{ matrix.arch }}.zip XingTu-core-${{ matrix.arch }}

      - name: 上传构建结果
        uses: actions/upload-artifact@v4
        with:
          name: XingTu-core-macos-${{ matrix.arch }}
          path: dist/XingTu-core-macos-${{ matrix.arch }}.zip

  build-windows:
    name: 构建 Windows
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 构建应用
        run: |
          pyinstaller --name XingTu-core-win --onefile --add-data "XingTu_core;XingTu_core" XingTu_core/__main__.py

      - name: 压缩构建结果
        run: |
          cd dist
          Compress-Archive -Path XingTu-core-win.exe -DestinationPath XingTu-core-windows.zip

      - name: 上传构建结果
        uses: actions/upload-artifact@v4
        with:
          name: XingTu-core-windows
          path: dist/XingTu-core-windows.zip

  release:
    name: 创建发布
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 下载所有构建结果
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 创建发布
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/XingTu-core-macos-x64/XingTu-core-macos-x64.zip
            artifacts/XingTu-core-macos-arm64/XingTu-core-macos-arm64.zip
            artifacts/XingTu-core-windows/XingTu-core-windows.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}